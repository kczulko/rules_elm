load("@com_github_edschouten_rules_elm//elm:def.bzl", "elm_binary", "elm_library")
load("@rules_nodejs//nodejs:toolchain.bzl", "nodejs_toolchain")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//:http-server/package_json.bzl", http_server_bin = "bin")
load("@aspect_rules_js//js:defs.bzl", "js_run_devserver")

npm_link_all_packages(name = "node_modules")

# load("@npm//http-server:index.bzl", "http_server")

nodejs_toolchain(
    name = "node_toolchain",
    node = "@nixpkgs_nodejs//:bin/node",
    npm = "@nixpkgs_nodejs//:bin/npm",
)

toolchain(
    name = "nixpkgs_nodejs_toolchain",
    exec_compatible_with = [ "@rules_nixpkgs_core//constraints:support_nix" ],
    toolchain = ":node_toolchain",
    toolchain_type = "@rules_nodejs//nodejs:toolchain_type",
)



elm_library(
    name = "lib",
    srcs = ["src/App.elm"],
    strip_import_prefix = "src",
    deps = [],
    # deps = [ "@elm_package_elm_core" ],
)

elm_binary(
    name = "bin",
    main = "src/Main.elm",
    deps = [
        ":lib",
        "@elm_package_elm_browser",
    ],
)

http_server_bin.http_server_binary(
    name = "http_server",
)

filegroup(
    name = "assets",
    srcs = [
        "index.html",
        "style.css",
    ]
)

js_run_devserver(
    name = "dev_server",
    args = [ "." ],
    data = [ ":assets", ":bin" ],
    tool = ":http_server",
)

# http_server(
#     name = "dev-server",
#     data = [
#         ":elm",
#         ":assets",
#     ]
# )
