load("@com_github_edschouten_rules_elm_examples//:defs.bzl",
     "rules_elm_integration_test_each_bazel",
     "gen_test_names_each"
)

sh_binary(
    name = "output_match_runner",
    testonly = True,
    srcs = ["output_match_runner.sh"],
    deps = [
        "@bazel_tools//tools/bash/runfiles",
        "@cgrindel_bazel_starlib//shlib/lib:assertions",
    ],
)

bazel_versions = ["bazel5", "bazel6"]

rules_elm_integration_test_each_bazel(
    name = "main_no_deps",
    bazel_versions = bazel_versions,
    workspace_path = "main-no-deps",
    bazel_cmd = "build :main",
    expected_output = """Use --sandbox_debug to see verbose messages from the sandbox and retain the sandbox build root for debugging
-- MISSING DEPENDENCY ------------------------------------------------- elm.json

An application must have "elm/core" as a dependency. Try running:

    elm install elm/core

It has some supporting code that is needed by every Elm application!

Target //:main failed to build
Use --verbose_failures to see the command lines of failed build steps.""",
)

rules_elm_integration_test_each_bazel(
    name = "elm_todo_mvc",
    bazel_versions = bazel_versions,
    test_runner = ":output_match_runner",
    workspace_path = "elm-todomvc",
    bazel_cmd = "build :elm",
    expected_output = """INFO: Build completed successfully, 3 total actions""",
)

rules_elm_integration_test_each_bazel(
    name = "elm_test",
    bazel_versions = bazel_versions,
    test_runner = ":output_match_runner",
    workspace_path = "elm-test",
    bazel_cmd = "test :spec --test_output=all",
    expected_output = """TEST RUN PASSED

Duration: 0 ms
Passed:   4
Failed:   0""",
)

rules_elm_integration_test_each_bazel(
    name = "elm_proto",
    bazel_versions = bazel_versions,
    test_runner = ":output_match_runner",
    workspace_path = "elm-proto",
    bazel_cmd = "test :spec --test_output=all",
    expected_output = """TEST RUN PASSED

Duration: 0 ms
Passed:   2
Failed:   0""",
)

test_suite(
    name = "integration_tests",
    tests = gen_test_names_each(
        name_prefixes = [
            "elm_test",
            "elm_proto",
            "elm_todo_mvc",
            "main_no_deps",
        ],
        bazel_versions = bazel_versions
    ),
    visibility = ["//:__subpackages__"],
)
