module(
    name = "elm-test",
    version = "1.0",
)

bazel_dep(name = "rules_elm")
local_path_override(
    module_name = "rules_elm",
    path = "../..",
)
bazel_dep(name = "rules_nixpkgs_core", version = "0.13.0")
bazel_dep(name = "rules_nodejs", version = "6.3.4")
bazel_dep(name = "rules_python", version = "1.3.0")

elm = use_extension("@rules_elm//elm:extensions.bzl", "elm")
elm.repository(
    name = "elm_package_elm_core",
    sha256 = "6e37b11c88c89a68d19d0c7625f1ef39ed70c59e443def95e4de98d6748c80a7",
    strip_prefix = "core-1.0.5",
    urls = ["https://github.com/elm/core/archive/1.0.5.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_json",
    sha256 = "d0635f33137e4ad3fc323f96ba280e45dc41afa51076c53d9f04fd92c2cf5c4e",
    strip_prefix = "json-1.1.3",
    urls = ["https://github.com/elm/json/archive/1.1.3.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_test",
    sha256 = "e199eaa0ea31b61cf3ce521b3b34e9a94d8cce65862062b91a484dcb28935b74",
    strip_prefix = "test-2.1.1",
    urls = ["https://github.com/elm-explorations/test/archive/2.1.1.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_bytes",
    sha256 = "922f3526e3b430e947d1d2eac5965e4caae625013649de2f657d4f258a5bdc0b",
    strip_prefix = "bytes-1.0.8",
    urls = ["https://github.com/elm/bytes/archive/1.0.8.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_virtual_dom",
    sha256 = "cf87286ed5d1b31aaf99c6a3368ccd340d1356b1973f1afe5f668c47e22b3b60",
    strip_prefix = "virtual-dom-1.0.2",
    urls = ["https://github.com/elm/virtual-dom/archive/1.0.2.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_random",
    sha256 = "b4b9dc99d5a064bc607684dd158199208bce51c0521b7e8a515c365e0a11168d",
    strip_prefix = "random-1.0.0",
    urls = ["https://github.com/elm/random/archive/1.0.0.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_html",
    sha256 = "73b885e0a3d2f9781b1c9bbcc1ee9ac032f503f5ef46a27da3ba617cebbf6fd8",
    strip_prefix = "html-1.0.0",
    urls = ["https://github.com/elm/html/archive/1.0.0.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_time",
    sha256 = "e18bca487adec67bfe4043a33b975d81527a7732377050d0421dd86d503c906d",
    strip_prefix = "time-1.0.0",
    urls = ["https://github.com/elm/time/archive/1.0.0.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_http",
    sha256 = "619bc23d7753bc172016ea764233dd7dfded1d919263c41b59885c5bcdd10b01",
    strip_prefix = "http-2.0.0",
    urls = ["https://github.com/elm/http/archive/2.0.0.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_file",
    sha256 = "c85b4025e12c1bf2dee9e4d853459ead7d1fa917304adfa2af27d116c86292e6",
    strip_prefix = "file-1.0.5",
    urls = ["https://github.com/elm/file/archive/1.0.5.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_browser",
    sha256 = "23f41491d325afc72649d512741fb8173725014c93e482d25bab3325555a4f59",
    strip_prefix = "browser-1.0.2",
    urls = ["https://github.com/elm/browser/archive/1.0.2.tar.gz"],
)
elm.repository(
    name = "elm_package_elm_url",
    sha256 = "840e9d45d8a9bd64a7f76421a1de2518e02c7cbea7ed42efd380b4e875e9682b",
    strip_prefix = "url-1.0.0",
    urls = ["https://github.com/elm/url/archive/1.0.0.tar.gz"],
)
use_repo(
    elm,
    "elm_package_elm_core",
    "elm_package_elm_json",
    "elm_package_elm_test",
    "elm_package_elm_bytes",    
    "elm_package_elm_virtual_dom",
    "elm_package_elm_random",
    "elm_package_elm_html",
    "elm_package_elm_time",
    "elm_package_elm_http",
    "elm_package_elm_file",
    "elm_package_elm_browser",
    "elm_package_elm_url",
)

nix_repo = use_extension("@rules_nixpkgs_core//extensions:repository.bzl", "nix_repo")
nix_pkg = use_extension("@rules_nixpkgs_core//extensions:package.bzl", "nix_pkg")

nix_repo.file(
    name = "nixpkgs",
    file = "//:nixpkgs.nix",
    file_deps = ["//:flake.lock"],
)
use_repo(nix_repo, "nixpkgs")

nix_pkg.attr(
    name = "nixpkgs_nodejs",
    attr = "nodejs",
    repo = "@nixpkgs",
)
nix_pkg.attr(
    name = "nixpkgs_python3",
    attr = "python3",
    repo = "@nixpkgs",
)
use_repo(
    nix_pkg,
    "nixpkgs_nodejs",
    "nixpkgs_python3",
)

register_toolchains(
    "//nix-toolchains:all"
)

