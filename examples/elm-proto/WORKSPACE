load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")

local_repository(
    name = "com_github_edschouten_rules_elm",
    path = "../external/com_github_edschouten_rules_elm",
)

load("@com_github_edschouten_rules_elm//elm:deps.bzl", "elm_register_toolchains")
load("@com_github_edschouten_rules_elm//repository:def.bzl", "elm_repository")
elm_register_toolchains()

rules_nixpkgs_version = "ae5346bb83c7a7b1e2b5dd3b4539f43953376ec8"
http_archive(
    name = "io_tweag_rules_nixpkgs",
    sha256 = "fee4136ed85b50d6a6ea69cfb34fbd355821b0448791bb3c0b7947e70013beeb",
    strip_prefix = "rules_nixpkgs-%s" % rules_nixpkgs_version,
    urls = [
        # "https://github.com/tweag/rules_nixpkgs/archive/ae5346bb83c7a7b1e2b5dd3b4539f43953376ec8.tar.gz"
        "https://github.com/tweag/rules_nixpkgs/archive/%s.tar.gz" % rules_nixpkgs_version
    ],
)

load("@io_tweag_rules_nixpkgs//nixpkgs:repositories.bzl", "rules_nixpkgs_dependencies")
rules_nixpkgs_dependencies()
load("@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl", "nixpkgs_git_repository", "nixpkgs_package")

http_archive(
    name = "io_tweag_rules_nixpkgs",
    sha256 = "b01f170580f646ee3cde1ea4c117d00e561afaf3c59eda604cf09194a824ff10",
    strip_prefix = "rules_nixpkgs-0.9.0",
    urls = ["curl -L https://github.com/tweag/prules_nixpkgs/archive/refs/tags/v0.9.0.tar.gz"],
)

load("@io_tweag_rules_nixpkgs//nixpkgs:repositories.bzl", "rules_nixpkgs_dependencies")
rules_nixpkgs_dependencies()
load("@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl", "nixpkgs_local_repository", "nixpkgs_package")

nixpkgs_local_repository(
    name = "nixpkgs",
    nix_file = "//:nixpkgs.nix",
    nix_file_deps = ["//:nixpkgs.json"],
)

nixpkgs_package(
    name ="nodejs",
    attribute_path = "nodejs",
    repository = "@nixpkgs",
)

elm_repository(
        name = "elm_package_elm_core",
        sha256 = "6e37b11c88c89a68d19d0c7625f1ef39ed70c59e443def95e4de98d6748c80a7",
        strip_prefix = "core-1.0.5",
        urls = ["https://github.com/elm/core/archive/1.0.5.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_json",
    sha256 = "d0635f33137e4ad3fc323f96ba280e45dc41afa51076c53d9f04fd92c2cf5c4e",
    strip_prefix = "json-1.1.3",
    urls = ["https://github.com/elm/json/archive/1.1.3.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_test",
    sha256 = "e199eaa0ea31b61cf3ce521b3b34e9a94d8cce65862062b91a484dcb28935b74",
    strip_prefix = "test-2.1.1",
    urls = ["https://github.com/elm-explorations/test/archive/2.1.1.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_bytes",
    sha256 = "922f3526e3b430e947d1d2eac5965e4caae625013649de2f657d4f258a5bdc0b",
    strip_prefix = "bytes-1.0.8",
    urls = ["https://github.com/elm/bytes/archive/1.0.8.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_virtual_dom",
    sha256 = "cf87286ed5d1b31aaf99c6a3368ccd340d1356b1973f1afe5f668c47e22b3b60",
    strip_prefix = "virtual-dom-1.0.2",
    urls = ["https://github.com/elm/virtual-dom/archive/1.0.2.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_random",
    sha256 = "b4b9dc99d5a064bc607684dd158199208bce51c0521b7e8a515c365e0a11168d",
    strip_prefix = "random-1.0.0",
    urls = ["https://github.com/elm/random/archive/1.0.0.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_html",
    sha256 = "73b885e0a3d2f9781b1c9bbcc1ee9ac032f503f5ef46a27da3ba617cebbf6fd8",
    strip_prefix = "html-1.0.0",
    urls = ["https://github.com/elm/html/archive/1.0.0.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_time",
    sha256 = "e18bca487adec67bfe4043a33b975d81527a7732377050d0421dd86d503c906d",
    strip_prefix = "time-1.0.0",
    urls = ["https://github.com/elm/time/archive/1.0.0.tar.gz"],
)
# @
elm_repository(
    name = "elm_package_tiziano88_elm_protobuf",
    sha256 = "624d6d1501d701bf04547558d7bc26f7f995493930d7d94854f782aaf9091303",
    strip_prefix = "elm-protobuf-3.0.0",
    urls = ["https://github.com/tiziano88/elm-protobuf/archive/3.0.0.tar.gz"],
)
elm_repository(
    name = "elm_package_jweir_elm_iso8601",
    sha256 = "6d9db7fee3b4d89714d133ef82d68d25cab348089073c9aa39264bfe5e5a341f",
    strip_prefix = "elm-iso8601-7.0.1",
    urls = ["https://github.com/jweir/elm-iso8601/archive/7.0.1.tar.gz"],
)
elm_repository(
    name = "elm_package_elm_regex",
    sha256 = "42e98d657040339c05c4001ea0f7469ec29beca5cc3c594fb1c11e0ecad53252",
    strip_prefix = "regex-1.0.0",
    urls = ["https://github.com/elm/regex/archive/refs/tags/1.0.0.tar.gz"],
)

nixpkgs_package(
    name = "com_github_tiziano88_elm_protobuf",
    repository = "@nixpkgs",
    nix_file_content = """
{ pkgs ? import <nixpkgs> {} }:

with pkgs;
let
    osSuffix = if stdenv.isDarwin then "osx" else "linux";
    sha256Darwin = "sha256-lD73CVQC6srB2/3bg6J5BiOSWUvN+1V8UZ2Eg1Atn5k=";
    sha256Linux = "sha256-0JZ3WCGybG4pVC0JYVnX3KlC9U1R7s0so4l7fLbaaF4=";
    checkSum = if stdenv.isDarwin then sha256Darwin else sha256Linux;
in
pkgs.stdenv.mkDerivation {
    name = "protoc-gen-elm";
    src = fetchurl {
      url = "https://github.com/tiziano88/elm-protobuf/releases/download/3.0.0/elm-protobuf-3.0.0-${osSuffix}-x86_64.tar.gz";
      sha256 = checkSum;
    };

    sourceRoot = "bin/elm-protobuf-3.0.0-${osSuffix}-x86_64";
    
    installPhase = ''
      install -m755 -D protoc-gen-elm $out/bin/protoc-gen-elm
      mkdir -p $out/protoc-gen-elm/
      ln -sf $out/bin/protoc-gen-elm $out/protoc-gen-elm/protoc-elm
      cat <<EOF > $out/protoc-gen-elm/BUILD
      filegroup(
          name = "protoc-gen-elm",
          srcs = ["protoc-elm"],
          visibility = ["//visibility:public"],
      )
      EOF
    '';
  }""",
    build_file_content = """
package(default_visibility = ["//visibility:public"])
""",
)

nixpkgs_package(
    name = "com_google_protobuf",
    repository = "@nixpkgs",
    attribute_path = "protobuf",
    build_file_content = """
package(default_visibility = ["//visibility:public"])
filegroup(
   name = "protoc",
   srcs = ["bin/protoc"],
)""",
)

nixpkgs_package(
    name ="uglifyjs",
    attribute_path = "nodePackages.uglify-js",
    repository = "@nixpkgs",
)

load("@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl", "nixpkgs_java_configure")
nixpkgs_java_configure(
    attribute_path = "jdk11.home",
    repository = "@nixpkgs",
    toolchain = True,
    toolchain_name = "nixpkgs_java",
    toolchain_version = "11",
)
